# Customise this file, documentation can be found here:
# https://github.com/fastlane/fastlane/tree/master/fastlane/docs
# All available actions: https://docs.fastlane.tools/actions
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "2.54.0"

default_platform :ios

platform :ios do
  before_all do
    # ENV["SLACK_URL"] = "https://hooks.slack.com/services/..."
    
  end

  desc "Runs all the tests"
  lane :test do
    scan
  end

  desc "Submit a new Beta Build to Apple TestFlight"
  desc "This will also make sure the profile is up to date"
  lane :beta do

begin
    puts 'Importing certificates...'

    temp_keychain_name = "testTravis-certs"
    create_keychain(
        name: temp_keychain_name,
        default_keychain: false,
        unlock: true,
        timeout: 3600,
        password: SecureRandom.base64
    )

    import_certificate(
        certificate_path: "fastlane/Certificates/cert.p12",
        certificate_password: ENV["KEY_PASSWORD"],
        keychain_name: temp_keychain_name
    )

    puts 'Certificates imported succesfully.'
rescue

    puts 'Certificates were already imported to the keychain before.'

end

    sigh(
        adhoc: false,
        username: "76423ok@gmail.com",
        team_id: "Z2U36UFBHG",
        provisioning_name: "Test Travis AppStore",
    )

    increment_build_number(build_number: number_of_commits)

    gym(
        configuration: "AppStore",
        clean: true,
        include_bitcode: false,
        include_symbols: true,
        use_legacy_build_api: true,
        export_method: "app-store"
    )

    pilot

    delete_keychain(
        name:temp_keychain_name
    )

    # sh "your_script.sh"
    # You can also use other beta testing services here (run `fastlane actions`)
  end

  desc "Deploy a new version to the App Store"
  lane :release do
    # match(type: "appstore")
    # snapshot
    gym(scheme: "testTravisCI") # Build your app - more options available
    deliver(force: true)
    # frameit
  end

  # You can define as many lanes as you want

  after_all do |lane|
    # This block is called, only if the executed lane was successful

    # slack(
    #   message: "Successfully deployed new App Update."
    # )
  end

  error do |lane, exception|
    # slack(
    #   message: exception.message,
    #   success: false
    # )
  end
end


# More information about multiple platforms in fastlane: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Platforms.md
# All available actions: https://docs.fastlane.tools/actions

# fastlane reports which actions are used. No personal data is recorded. 
# Learn more at https://github.com/fastlane/fastlane#metrics
